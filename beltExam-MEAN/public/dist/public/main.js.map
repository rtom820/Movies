{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app-routing.module.ts","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/details/details.component.css","webpack:///./src/app/details/details.component.html","webpack:///./src/app/details/details.component.ts","webpack:///./src/app/edit/edit.component.css","webpack:///./src/app/edit/edit.component.html","webpack:///./src/app/edit/edit.component.ts","webpack:///./src/app/home/home.component.css","webpack:///./src/app/home/home.component.html","webpack:///./src/app/home/home.component.ts","webpack:///./src/app/http.service.ts","webpack:///./src/app/movie/movie.component.css","webpack:///./src/app/movie/movie.component.html","webpack:///./src/app/movie/movie.component.ts","webpack:///./src/app/new/new.component.css","webpack:///./src/app/new/new.component.html","webpack:///./src/app/new/new.component.ts","webpack:///./src/app/review/review.component.css","webpack:///./src/app/review/review.component.html","webpack:///./src/app/review/review.component.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { HomeComponent } from './home/home.component';\nimport { NewComponent } from './new/new.component';\nimport { DetailsComponent } from './details/details.component';\nimport { EditComponent } from './edit/edit.component';\nimport { MovieComponent } from './movie/movie.component';\nimport { ReviewComponent } from './review/review.component';\n\n//update routes dependent on wireframe\nconst routes: Routes = [\n  // {path:'', pathMatch:'full', redirectTo:'home'},\n  {path: 'home', component:HomeComponent},\n  // {path: 'movie/new', component:NewComponent},\n  {path: 'movie/details/:id', component:DetailsComponent},\n  {path: 'movie/edit/:id', component:EditComponent},\n  {path: 'movie', component:MovieComponent},\n  {path: 'review', component:ReviewComponent},\n  //catch all\n  {path: '**', component: HomeComponent}\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2FwcC5jb21wb25lbnQuY3NzIn0= */\"","module.exports = \"<hr>\\n<h1>Movie Ratings</h1>\\n<hr>\\n<button type=\\\"button\\\" class=\\\"btn btn-warning\\\" [routerLink] = \\\"['/home']\\\">Home</button>\\n<button type=\\\"button\\\" class=\\\"btn btn-info\\\" [routerLink] = \\\"['/movie']\\\">All Movies</button>\\n<button type=\\\"button\\\" class=\\\"btn btn-secondary\\\" [routerLink] = \\\"['/movie/new']\\\" disabled>Create New Movie</button>\\n<hr>\\n\\n<router-outlet></router-outlet>\"","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'public';\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { HttpService } from './http.service';\nimport { HttpClientModule } from '@angular/common/http'\nimport { FormsModule } from '@angular/forms';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { ReviewComponent } from './review/review.component';\nimport { MovieComponent } from './movie/movie.component';\nimport { HomeComponent } from './home/home.component';\nimport { NewComponent } from './new/new.component';\nimport { EditComponent } from './edit/edit.component';\nimport { DetailsComponent } from './details/details.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    ReviewComponent,\n    MovieComponent,\n    HomeComponent,\n    NewComponent,\n    EditComponent,\n    DetailsComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    HttpClientModule,\n    FormsModule\n\n  ],\n  providers: [HttpService],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2RldGFpbHMvZGV0YWlscy5jb21wb25lbnQuY3NzIn0= */\"","module.exports = \"<h1>{{shownMovie[0].name}}</h1>\\n<h2>Average: {{shownMovie.avg.toFixed(2)}}</h2>\\n<button type=\\\"button\\\" class=\\\"btn btn-danger\\\" (click) = \\\"onDelete()\\\">Delete Movie</button>\\n\\n<table class=\\\"table\\\">\\n  <thead>\\n    <tr>\\n      <th>Reviewer</th>\\n      <th>Rating</th>\\n      <th>Comment</th>\\n      <th>Actions</th>\\n    </tr>\\n  </thead>\\n  <tbody>\\n    <tr *ngFor = \\\"let review of shownMovie[0].reviews\\\">\\n      <td>{{review.name}}</td>\\n      <td>{{review.rating}} Stars</td>\\n      <td>{{review.comment}}</td>\\n      <td>\\n        <button type=\\\"button\\\" class=\\\"btn btn-danger\\\" (click) = \\\"onDeleteReview(review)\\\">Delete</button>\\n      </td>\\n    </tr>\\n  </tbody>\\n</table>\\n\\n<h3>Write a review</h3>\\n<p *ngIf=\\\"newReview.name.length >= 1 && newReview.name.length < 3\\\" class=\\\"text-danger\\\">Reviewer name must be at least 3 characters</p>\\n<p *ngIf=\\\"newReview.comment.length >= 1 && newReview.comment.length < 3\\\" class=\\\"text-danger\\\">Comment must be at least 3 characters</p>\\n<form (submit)=\\\"onSubmit()\\\">\\n  <div class=\\\"form-group row\\\"> \\n    <label class=\\\"col-sm-2 col-form-label\\\">Reviewer:</label>\\n    <div class=\\\"col-sm-5\\\"><input type=\\\"text\\\" name=\\\"newReview.name\\\" [(ngModel)]=\\\"newReview.name\\\" class=\\\"form-control\\\"/></div>\\n  </div>\\n\\n  <div class=\\\"form-group row\\\"> \\n    <label class=\\\"col-sm-2 col-form-label\\\">Rating:</label>\\n    <div class=\\\"col-sm-2\\\"><select name=\\\"newReview.rating\\\" [(ngModel)]=\\\"newReview.rating\\\" class=\\\"form-control\\\">\\n      <option value=\\\"1\\\">1 Stars</option>\\n      <option value=\\\"2\\\">2 Stars</option>\\n      <option value=\\\"3\\\">3 Stars</option>\\n      <option value=\\\"4\\\">4 Stars</option>\\n      <option value=\\\"5\\\">5 Stars</option>\\n    </select></div>\\n  </div>\\n  <div class=\\\"form-group row\\\"> \\n    <label class=\\\"col-sm-2 col-form-label\\\">Comment</label>\\n    <div class=\\\"col-sm-6\\\"><textarea name=\\\"newReview.comment\\\" [(ngModel)]=\\\"newReview.comment\\\" class=\\\"form-control\\\"></textarea></div>\\n  </div>\\n  <button type=\\\"submit\\\" [disabled]=\\\"newReview.name.length < 3 || newReview.comment.length < 3 || newReview.rating < 1 || newReview.rating > 5\\\" class=\\\"btn btn-success\\\">Submit</button>\\n  <button [routerLink] = \\\"['/movie']\\\" class=\\\"btn btn-outline-danger\\\">Cancel</button>\\n</form>\"","import { Component, OnInit } from '@angular/core';\nimport { HttpService } from '../http.service';\nimport { ActivatedRoute, Router } from '@angular/router';\n\n@Component({\n  selector: 'app-details',\n  templateUrl: './details.component.html',\n  styleUrls: ['./details.component.css']\n})\nexport class DetailsComponent implements OnInit {\n  newReview: any;\n  shownMovie: any;\n  listOfMovies: [];\n\n  constructor(\n    private _httpService: HttpService,\n    private _route: ActivatedRoute,\n    private _router: Router\n  ) { }\n\n  ngOnInit() {\n    this.newReview = { name: \"\", rating: null, comment: \"\"}\n    this.shownMovie = { name: \"\", reviews:[{ rating: null, comment: \"\"}] }\n    this.getShownMovie();\n  }\n  getShownMovie(){\n    let observable = this._httpService.getMovie(this._route.snapshot.params.id)\n    observable.subscribe(data => {\n      this.shownMovie = data['data'];\n      console.log(this.shownMovie);\n      //get avg rating\n      var sum = 0;\n      if (this.shownMovie[0].reviews.length > 0 ){\n        for (var i = 0; i < this.shownMovie[0].reviews.length; i++){\n          sum += this.shownMovie[0].reviews[i].rating;\n        }\n          this.shownMovie.avg = sum / (this.shownMovie[0].reviews.length);\n          this.shownMovie.sortedreviews = this.shownMovie[0].reviews.sort(this._httpService.dynamicSort(\"-rating\")) // sort by descending rating\n      }\n    })\n  }\n  getMoviesList(){\n    let observable = this._httpService.getMovies();\n    observable.subscribe(data => {\n      // this.listOfMovies = data['data']; // regular retrieval\n      this.listOfMovies = data['data'].sort(this._httpService.dynamicSort(\"name\")); //sort by name\n    })\n  }\n  onSubmit(){\n    let observable = this._httpService.addReview(this._route.snapshot.params.id, this.newReview);\n    observable.subscribe(data => {\n      this.newReview = { name: \"\", rating: null, comment: \"\"};\n      this.getShownMovie();\n    })\n  }\n\n  onDelete() {\n    let observable = this._httpService.deleteMovie(this._route.snapshot.params.id);\n    observable.subscribe(data => {\n      this.getMoviesList();\n      this._router.navigate(['/movie'])\n    })\n  }\n\n  onDeleteReview(review){\n    let observable = this._httpService.deleteReview(this._route.snapshot.params.id, review._id)\n    observable.subscribe(data=> {\n      this.getShownMovie();\n    })\n  }\n}","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2VkaXQvZWRpdC5jb21wb25lbnQuY3NzIn0= */\"","module.exports = \"<form (submit)=\\\"onSubmit()\\\">\\n    <!-- <p>{{editingMovie | json}}</p> -->\\n    <p *ngIf=\\\"editingMovie.name.length >= 1 && editingMovie.name.length < 3\\\" class=\\\"text-danger\\\">Title must be at least 3 characters</p>\\n    \\n    <div class=\\\"form-group row\\\"> \\n      <label class=\\\"col-sm-2 col-form-label\\\">Movie Title:</label>\\n      <div class=\\\"col-sm-10\\\">\\n        <input type=\\\"text\\\" name=\\\"editingMovie.name\\\" [(ngModel)] = \\\"editingMovie.name\\\" [value]=\\\"editingMovie.name\\\" class=\\\"form-control\\\"> \\n      </div>\\n    </div>\\n    <button type=\\\"submit\\\" [disabled]=\\\"editingMovie.name.length < 3 \\\" class=\\\"btn btn-success\\\">Submit</button>\\n  </form>\\n  <button [routerLink] = \\\"['/movie']\\\" class=\\\"btn btn-danger\\\">Cancel</button>\"","import { Component, OnInit } from '@angular/core';\nimport { HttpService } from '../http.service';\nimport { ActivatedRoute, Router } from '@angular/router';\n\n@Component({\n  selector: 'app-edit',\n  templateUrl: './edit.component.html',\n  styleUrls: ['./edit.component.css']\n})\nexport class EditComponent implements OnInit {\n  editingMovie: any;\n  constructor(\n    private _httpService: HttpService,\n    private _route: ActivatedRoute,\n    private _router: Router\n  ) { }\n\n  ngOnInit() {\n    this.editingMovie = {name: \"\", reviews: []}\n    this.getSpecificMovie();\n\n  }\n  getSpecificMovie(){\n    let observable = this._httpService.getMovie(this._route.snapshot.params.id);\n    observable.subscribe(data => {\n      this.editingMovie = data['data'][0];\n    })\n  }\n  onSubmit(){\n    let observable = this._httpService.editMovie(this._route.snapshot.params.id, this.editingMovie);\n    observable.subscribe(data =>{\n      this.editingMovie = data['data'][0];\n      this._router.navigate(['/movie'])\n    })\n  }\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2hvbWUvaG9tZS5jb21wb25lbnQuY3NzIn0= */\"","module.exports = \"<p>\\n  home works!\\n</p>\\n\"","import { Component, OnInit } from '@angular/core';\nimport { HttpService } from '../http.service';\nimport { ActivatedRoute, Router } from '@angular/router';\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.css']\n})\nexport class HomeComponent implements OnInit {\n\n  constructor(\n    private _httpService: HttpService,\n    private _route: ActivatedRoute,\n    private _router: Router\n  ) { }\n\n  ngOnInit() {\n    this._router.navigate(['/movie']);\n  }\n  //methods if needed\n}","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\n\n@Injectable()\nexport class HttpService {\n  constructor(private _http: HttpClient) { }\n  getMovies(){\n    return this._http.get(\"/movies\");\n  }\n  getMovie(movie_id){ //can get all reviewren of one movie through this route\n    return this._http.get(\"/movies/\" + movie_id);\n  }\n  addMovie(newMovie){\n    return this._http.post(\"/movies/new\", newMovie);\n  }\n  addReview(movie_id, newReview){\n    return this._http.put(\"/reviews/new/\" + movie_id, newReview);\n  }\n  editMovie(movie_id, editedMovie){\n    return this._http.put(\"/movies/edit/\" + movie_id, editedMovie);\n  }\n  //edit review route ?\n  deleteMovie(movie_id){\n    return this._http.delete(\"/movies/remove/\" + movie_id);\n  }\n  deleteReview(movie_id, review_id){\n    return this._http.get(\"/reviews/remove/\" + movie_id +\"/\"+ review_id);\n  }\n  dynamicSort(property) {\n    var sortOrder = 1;\n    if (property[0] === \"-\") {\n        sortOrder = -1;\n        property = property.substr(1);\n    }\n    return function (a, b) {\n        var result = (a[property] < b[property]) ? -1 : (a[property] > b[property]) ? 1 : 0;\n        return result * sortOrder;\n    }\n  }\n}","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL21vdmllL21vdmllLmNvbXBvbmVudC5jc3MifQ== */\"","module.exports = \"<table class=\\\"table\\\">\\n    <thead>\\n      <tr>\\n        <th scope=\\\"col\\\">Movie</th>\\n        <th scope=\\\"col\\\">Avg. Rating</th>\\n        <th scope=\\\"col\\\">Actions</th>\\n      </tr>\\n    </thead>\\n    <tbody>\\n      <tr *ngFor = \\\"let movie of listOfMovies\\\">\\n        <th>{{movie.name}}</th>\\n        <td>{{movie.avg.toFixed(2)}}</td>\\n        <td>\\n          <button type=\\\"button\\\" class=\\\"btn btn-info\\\" (click) = \\\"onShow(movie)\\\">Show Details</button>\\n          <button type=\\\"button\\\" class=\\\"btn btn-info\\\" (click) = \\\"onEdit(movie)\\\">Edit</button>\\n        </td>\\n      </tr>\\n    </tbody>\\n  </table>\\n  <app-new></app-new>\\n\"","import { Component, OnInit } from '@angular/core';\nimport { HttpService } from '../http.service';\nimport { ActivatedRoute, Router } from '@angular/router';\n\n@Component({\n  selector: 'app-movie',\n  templateUrl: './movie.component.html',\n  styleUrls: ['./movie.component.css']\n})\nexport class MovieComponent implements OnInit {\n  listOfMovies: any;\n  selectedMovie: any;\n  constructor(\n    private _httpService: HttpService,\n    private _route: ActivatedRoute,\n    private _router: Router\n  ) { }\n\n  ngOnInit() {\n    this.getMoviesList();\n  }\n  getMoviesList(){\n    let observable = this._httpService.getMovies();\n    observable.subscribe(data => {\n      // this.listOfMovies = data['data']; // regular retrieval\n      this.listOfMovies = data['data'].sort(this._httpService.dynamicSort(\"name\")); //sort by name\n      for(let movie of this.listOfMovies){\n        var sum = 0\n        for (var i = 0; i < movie.reviews.length; i++){\n          sum += movie.reviews[i].rating;\n        }\n        movie.avg = sum / movie.reviews.length\n      }\n    })\n  }\n  onShow(movie) {\n    this._router.navigate(['/movie/details/' + movie._id ])\n  }\n  onEdit(movie) {\n    this._router.navigate(['/movie/edit/' + movie._id ])\n  }\n  onDelete(movie) {\n    let observable = this._httpService.deleteMovie(movie._id);\n    observable.subscribe(data => {\n      this.getMoviesList();\n    })\n  }\n  onSelect(movie){\n    this.selectedMovie = movie;\n  }\n  ReceivedReviewMessage(event){\n    if(event == true){\n      this.selectedMovie = null;\n    }\n  }\n}","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL25ldy9uZXcuY29tcG9uZW50LmNzcyJ9 */\"","module.exports = \"<p *ngIf=\\\"newMovie.name.length >= 1 && newMovie.name.length < 3\\\" class=\\\"text-danger\\\">Title must be at least 3 characters</p>\\n<p *ngIf=\\\"newReview.name.length >= 1 && newReview.name.length < 3\\\" class=\\\"text-danger\\\">Reviewer name must be at least 3 characters</p>\\n<p *ngIf=\\\"newReview.comment.length >= 1 && newReview.comment.length < 3\\\" class=\\\"text-danger\\\">Comment must be at least 3 characters</p>\\n\\n<form (submit)=\\\"onSubmit()\\\">\\n  <div class=\\\"form-group row\\\"> \\n    <label class=\\\"col-sm-2 col-form-label\\\">Movie Title:</label>\\n    <div class=\\\"col-sm-5\\\"><input type=\\\"text\\\" name=\\\"newMovie.name\\\" [(ngModel)] = \\\"newMovie.name\\\" class=\\\"form-control\\\"/></div>\\n  </div>\\n\\n  <div class=\\\"form-group row\\\"> \\n    <label class=\\\"col-sm-2 col-form-label\\\">Reviewer:</label>\\n    <div class=\\\"col-sm-5\\\"><input type=\\\"text\\\" name=\\\"newReview.name\\\" [(ngModel)]=\\\"newReview.name\\\" class=\\\"form-control\\\"/></div>\\n  </div>\\n\\n  <div class=\\\"form-group row\\\"> \\n    <label class=\\\"col-sm-2 col-form-label\\\">Rating:</label>\\n    <div class=\\\"col-sm-2\\\"><select name=\\\"newReview.rating\\\" [(ngModel)]=\\\"newReview.rating\\\" class=\\\"form-control\\\">\\n      <option value=\\\"1\\\">1 Stars</option>\\n      <option value=\\\"2\\\">2 Stars</option>\\n      <option value=\\\"3\\\">3 Stars</option>\\n      <option value=\\\"4\\\">4 Stars</option>\\n      <option value=\\\"5\\\">5 Stars</option>\\n    </select></div>\\n  </div>\\n  <div class=\\\"form-group row\\\"> \\n    <label class=\\\"col-sm-2 col-form-label\\\">Comment</label>\\n    <div class=\\\"col-sm-6\\\"><textarea name=\\\"newReview.comment\\\" [(ngModel)]=\\\"newReview.comment\\\" class=\\\"form-control\\\"></textarea></div>\\n  </div>\\n  <button type=\\\"submit\\\" [disabled]=\\\"newMovie.name.length < 3 || newReview.name.length < 3 || newReview.comment.length < 3 || newReview.rating < 1 || newReview.rating > 5\\\" class=\\\"btn btn-success\\\">Submit</button>\\n  <button [routerLink] = \\\"['/movie']\\\" class=\\\"btn btn-outline-danger\\\">Cancel</button>\\n</form>\"","import { Component, OnInit } from '@angular/core';\nimport { HttpService } from '../http.service';\nimport { ActivatedRoute, Router } from '@angular/router';\n\n@Component({\n  selector: 'app-new',\n  templateUrl: './new.component.html',\n  styleUrls: ['./new.component.css']\n})\nexport class NewComponent implements OnInit {\n  newMovie: any;\n  newReview: any;\n  errorBoolean: boolean; //false\n  errorMessage: \"\";\n  constructor(\n    private _httpService: HttpService,\n    private _route: ActivatedRoute,\n    private _router: Router\n  ) { }\n\n  ngOnInit() {\n    this.newMovie = { name: \"\", reviews: [] } \n    this.newReview = { name:\"\", rating: null, comment: \"\"}\n  }\n  // onSubmit() {\n  //   if(this.newMovie.name.length < 3) {\n  //     this.errorBoolean = true;\n  //   } else {\n  //     this.newMovie.reviews.push(this.newReview);\n  //     let observable = this._httpService.addMovie(this.newMovie);\n  //     observable.subscribe(data => {\n  //       console.log(data);\n  //       //display error messages to html. Change error messages in the CONTROLLERS as needed\n  //       if (data['errorMsg']) {\n  //         this.errorMessage = data['errorMsg'];\n  //       } else {\n  //         this._router.navigate(['/p']);\n  //       }\n  //     })\n  //   }\n  // }\n\n  // front-end validation\n  onSubmit() {\n    if (this.newMovie.name.length < 3) {\n      this.errorBoolean = true;\n    } else {\n      //this will create the object with an initial review\n      this.newMovie.reviews.push(this.newReview);\n      let observable = this._httpService.addMovie(this.newMovie);\n      observable.subscribe(data => {\n        console.log(data);\n        this._router.navigate(['/movie'])\n      })\n    }\n  }\n\n\n}","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3Jldmlldy9yZXZpZXcuY29tcG9uZW50LmNzcyJ9 */\"","module.exports = \"<p>{{reviewVariable.name}}</p>\\n<div *ngFor=\\\"let x of reviewVariable.reviews\\\">\\n  <p>{{x.name}}</p>\\n  <p>{{x.comment}}</p>\\n  <p>{{x.rating}}</p>\\n</div>\\n<button (click)=\\\"sendBackToParent()\\\">Go back</button>\"","import { Component, OnInit, Input, Output ,EventEmitter } from '@angular/core';\n\n@Component({\n  selector: 'app-review',\n  templateUrl: './review.component.html',\n  styleUrls: ['./review.component.css']\n})\nexport class ReviewComponent implements OnInit {\n  @Input() reviewVariable:any;\n  @Output() reviewOutputVariable = new EventEmitter();\n  constructor() { }\n\n  ngOnInit() {\n  }\n  sendBackToParent(){\n    this.reviewOutputVariable.emit(true);\n  }\n}","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":""}